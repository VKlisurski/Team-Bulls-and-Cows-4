<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>BullsAndCowsGame</name>
  </assembly>
  <members>
    <member name="N:BullsAndCowsGame">
    </member>
    <member name="T:BullsAndCowsGame.BullsAndCows">
      <summary>
An implementation of the popular Bulls and Cows game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.BullsAndCows.Main">
      <summary>
The entry point of our Bulls and Cows game.</summary>
    </member>
    <member name="T:BullsAndCowsGame.Command">
      <summary>
This is a base class inherited by all command classes in the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Command.Execute(BullsAndCowsGame.InputOutput)">
      <summary>
Executes the current command.</summary>
      <param name="inputOutput">
The input and output to be used by the current command.</param>
    </member>
    <member name="T:BullsAndCowsGame.CommandCreator">
      <summary>
A factory class resposible for the creation of commands.</summary>
    </member>
    <member name="M:BullsAndCowsGame.CommandCreator.Create(System.String,BullsAndCowsGame.GameEngine)">
      <summary>
Creates a new game command, according to the provided command name.</summary>
      <returns>
A command, to be executed on the given engine.</returns>
      <param name="commandName">
Represents the command name.</param>
      <param name="engine">
The engine on which the command should be executed.</param>
    </member>
    <member name="T:BullsAndCowsGame.CommandExit">
      <summary>
A command to be executed when it's time for the player to leave the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.CommandExit.#ctor(BullsAndCowsGame.Contracts.IGameEngine)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.CommandExit class.</summary>
      <param name="engine">
The engine on which the current command would be executed on.</param>
    </member>
    <member name="M:BullsAndCowsGame.CommandExit.Execute(BullsAndCowsGame.InputOutput)">
      <summary>
Executes the current command.</summary>
      <param name="inputOutput">
The input and output to be used by the current command.</param>
    </member>
    <member name="T:BullsAndCowsGame.CommandHelp">
      <summary>
A command to be executed when the player asks for help.</summary>
    </member>
    <member name="M:BullsAndCowsGame.CommandHelp.#ctor(BullsAndCowsGame.Contracts.IGameEngine)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.CommandHelp class.</summary>
      <param name="engine">
The engine on which the current command would be executed on.</param>
    </member>
    <member name="M:BullsAndCowsGame.CommandHelp.Execute(BullsAndCowsGame.InputOutput)">
      <summary>
Executes the current command.</summary>
      <param name="inputOutput">
The input and output to be used by the current command.</param>
    </member>
    <member name="T:BullsAndCowsGame.CommandOther">
      <summary>
A command to be executed, when the player enters an invalid command.</summary>
    </member>
    <member name="M:BullsAndCowsGame.CommandOther.#ctor(BullsAndCowsGame.Contracts.IGameEngine)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.CommandOther class.</summary>
      <param name="engine">
The engine on which the current command would be executed on.</param>
    </member>
    <member name="M:BullsAndCowsGame.CommandOther.Execute(BullsAndCowsGame.InputOutput)">
      <summary>
Executes the current command.</summary>
      <param name="inputOutput">
The input and output to be used by the current command.</param>
    </member>
    <member name="T:BullsAndCowsGame.CommandRestart">
      <summary>
A command to be executed when the player wants to restart the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.CommandRestart.#ctor(BullsAndCowsGame.Contracts.IGameEngine)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.CommandRestart class.</summary>
      <param name="engine">
The engine on which the current command would be executed on.</param>
    </member>
    <member name="M:BullsAndCowsGame.CommandRestart.Execute(BullsAndCowsGame.InputOutput)">
      <summary>
Executes the current command.</summary>
      <param name="inputOutput">
The input and output to be used by the current command.</param>
    </member>
    <member name="T:BullsAndCowsGame.CommandTop">
      <summary>
A command to be executed when the player asks to see the scoreboard.</summary>
    </member>
    <member name="M:BullsAndCowsGame.CommandTop.#ctor(BullsAndCowsGame.Contracts.IGameEngine)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.CommandTop class.</summary>
      <param name="engine">
The engine on which the current command would be executed on.</param>
    </member>
    <member name="M:BullsAndCowsGame.CommandTop.Execute(BullsAndCowsGame.InputOutput)">
      <summary>
Executes the current command.</summary>
      <param name="inputOutput">
The input and output to be used by the current command.</param>
    </member>
    <member name="T:BullsAndCowsGame.ConsolePrinter">
      <summary>
This is used by the player to write on the standard output stream.</summary>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.Write(System.String)">
      <summary>
Writes the specified string value to the standard output stream.</summary>
      <param name="message">
The value to write.</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.Write(System.String,System.Object)">
      <summary>
Writes the specified string value to the output defined by the implementation of this interface.</summary>
      <param name="format">
</param>
      <param name="arg0">
</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine">
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine(System.String)">
      <param name="message">
</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine(System.String,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine(System.String,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
      <param name="arg2">
</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
      <param name="arg2">
</param>
      <param name="arg3">
</param>
    </member>
    <member name="M:BullsAndCowsGame.ConsolePrinter.WriteLine(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="args">
</param>
    </member>
    <member name="T:BullsAndCowsGame.ConsoleReader">
      <summary>
This is used to read input by a player from the console.</summary>
    </member>
    <member name="M:BullsAndCowsGame.ConsoleReader.ReadLine">
      <summary>
Reads a line written by the player to the console.</summary>
      <returns>
Reads the next line of characters from the standard input stream.</returns>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.ICalculateBullsAndCowsStrategy.ExecuteStrategy(System.String,System.String)">
      <summary>
Executes the current strategy.</summary>
      <returns>
An object containing information about how many bulls and how many cows did the current guess number have.</returns>
      <param name="playerInput">
The guess number entered by the player.</param>
      <param name="generatedNumber">
The original number that needs to be found out.</param>
    </member>
    <member name="P:BullsAndCowsGame.Contracts.IGameEngine.LeaderBoard">
      <summary>
Gets an instance holding information of the top scoring players.</summary>
    </member>
    <member name="P:BullsAndCowsGame.Contracts.IGameEngine.MessageDispatcher">
      <summary>
Gets an instance used to provide messages to the player.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IGameEngine.Start">
      <summary>
Used to start the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IGameEngine.Exit">
      <summary>
Used to exit the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IGameEngine.Restart">
      <summary>
Used to restart the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IGameEngine.GetHelp">
      <summary>
Used to get help for the player, who wants to cheat.</summary>
      <returns>
A string representing the original number, with some of it's digits hidden.</returns>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetScoreBoard(BullsAndCowsGame.LeaderBoard{BullsAndCowsGame.Player})">
      <summary>
Returns a formatted string displaying information about the players in the given leaderboard.</summary>
      <returns>
The socreboard information formatted as a string.</returns>
      <param name="leaderBoard">
The leaderboard to be displayed.</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetCongatulationsMessage(BullsAndCowsGame.Helper,System.Int32)">
      <summary>
This should be invoked when the player guesses the right number. It returns a congratulations message containing information about how many attempts were made.</summary>
      <returns>
The congratulations message.</returns>
      <param name="helper">
The helper used during the game.</param>
      <param name="attempts">
How many attempts did the player make to guess the number.</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetWrongNumberMessage(System.Int32,System.Int32)">
      <summary>
This is invoked when the player enters a wrong guess number. It returns a message with information about how many bulls and how many cows did the guess number have.</summary>
      <returns>
A message holding information if how many bulls and cows were in the guess number.</returns>
      <param name="bullsCount">
How many bulls did the guess number have.</param>
      <param name="cowsCount">
How many cows did the guess number have.</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetWelcomeMessage">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetGoodbyeMessage">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetInvalidCommandMessage">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetNoCheatersMessage">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetEnterNameMessage">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IMessageDispatcher.GetEnterCommandMessage">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.Write(System.String)">
      <summary>
Writes the specified string value to the output defined by the implementation of this interface.</summary>
      <param name="message">
The value to write.</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.Write(System.String,System.Object)">
      <param name="format">
</param>
      <param name="arg0">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine">
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine(System.String)">
      <param name="message">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine(System.String,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine(System.String,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
      <param name="arg2">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
      <param name="arg2">
</param>
      <param name="arg3">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IPrinter.WriteLine(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="args">
</param>
    </member>
    <member name="M:BullsAndCowsGame.Contracts.IReader.ReadLine">
      <summary>
Reads a single line of characters entered by the player.</summary>
      <returns>
Reads a line of characters.</returns>
    </member>
    <member name="T:BullsAndCowsGame.FactoryMethod">
      <summary>
Implementation of the Factory Method pattern used to instantiate commands.</summary>
    </member>
    <member name="M:BullsAndCowsGame.FactoryMethod.Create(System.String,BullsAndCowsGame.GameEngine)">
      <summary>
Creates a command by given name and engine.</summary>
      <returns>
The initialized command.</returns>
      <param name="commandName">
Name of the command to be created.</param>
      <param name="engine">
Instance of the engine on which the command will be executed.</param>
    </member>
    <member name="T:BullsAndCowsGame.GameEngine">
      <summary>
The main class running the core Bulls and Cows game logic.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.Instance">
      <summary>
A singleton implementation holding the only possible instance of the BullsAndCowsGame.GameEngine class.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.Attempts">
      <summary>
Gets or sets the amount of guess attemptes the player made in a game.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.Helper">
      <summary>
Gets or sets the helper class to be used by the game engine.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.GameOn">
      <summary>
Gets or sets a flag, used by the game engine to determine if the game is running.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.MessageDispatcher">
      <summary>
Gets or sets an instance used to provide messages to the player.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.NumberProvider">
      <summary>
Gets or sets an instance used to provide a random number for the player to guess and also to determine if the guess number entered by the player is valid.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GameEngine.LeaderBoard">
      <summary>
Gets an instance holding information of the top scoring players.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GameEngine.Start">
      <summary>
Starts the game and displays a welcome message.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GameEngine.Exit">
      <summary>
Exits the game. A goodbye message is displayed.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GameEngine.Restart">
      <summary>
Restarts the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GameEngine.GetHelp">
      <summary>
Provides help to the player when he uses a cheat.</summary>
      <returns>
A string representing the original number, with some of it's digits hidden.</returns>
    </member>
    <member name="T:BullsAndCowsGame.GameNumberProvider">
      <summary>
A class used to provide a new number to be guessed by the player and validate a guess number entered by the player.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GameNumberProvider.#ctor">
      <summary>
Initializes a new instance of the BullsAndCowsGame.GameNumberProvider class.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GameNumberProvider.Generate(System.Int32)">
      <summary>
Generates a number with length specified by the defaultNumberLength parameter.</summary>
      <returns>
Generated number.</returns>
      <param name="defaultNumberLength">
Specifies how many digits the number should have.</param>
    </member>
    <member name="M:BullsAndCowsGame.GameNumberProvider.IsValidNumber(System.String,System.Int32)">
      <summary>
Checks if the number entered by the player is a valid "Bulls and Cows" number.</summary>
      <returns>
true if the number is valid and false if it isn't.</returns>
      <param name="playerInput">
The number entered by the player.</param>
      <param name="defaultNumberLength">
The default length a valid number should have.</param>
    </member>
    <member name="T:BullsAndCowsGame.GuessResult">
      <summary>
Contains information about how many bulls and how many cows are in a given guess.</summary>
    </member>
    <member name="M:BullsAndCowsGame.GuessResult.#ctor(System.Int32,System.Int32)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.GuessResult class.</summary>
      <param name="bulls">
The amount of bulls.</param>
      <param name="cows">
The amount of cows.</param>
    </member>
    <member name="P:BullsAndCowsGame.GuessResult.Bulls">
      <summary>
Gets or sets the amount of bulls for the current guess.</summary>
    </member>
    <member name="P:BullsAndCowsGame.GuessResult.Cows">
      <summary>
Gets or sets the amount of cows for the current guess.</summary>
    </member>
    <member name="T:BullsAndCowsGame.Helper">
      <summary>
A class providing functionality for the usage of cheats in the game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Helper.#ctor">
      <summary>
Initializes a new instance of the BullsAndCowsGame.Helper class.</summary>
    </member>
    <member name="P:BullsAndCowsGame.Helper.Cheats">
      <summary>
Gets or sets the number of cheats used by the player.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Helper.GetHelp(System.String)">
      <summary>
Gets a string representing the original number with some of it's digits revealed.</summary>
      <returns>
A string representing the original number with some of it's digits revealed.</returns>
      <param name="generatedNumber">
The original generated number.</param>
    </member>
    <member name="T:BullsAndCowsGame.InputOutput">
      <summary>
A facade class used reading data from the player and releasing data to the player.</summary>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.#ctor">
      <summary>
Initializes a new instance of the BullsAndCowsGame.InputOutput class.</summary>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.#ctor(BullsAndCowsGame.Contracts.IReader,BullsAndCowsGame.Contracts.IPrinter)">
      <summary>
Returns a new instance of the BullsAndCowsGame.InputOutput class.</summary>
      <param name="reader">
The reader to be used for input.</param>
      <param name="printer">
The printer to be used for output.</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine">
      <summary>
Writes a new line on the output.</summary>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine(System.String)">
      <summary>
Writes a new line on the output with new line attached at the end.</summary>
      <param name="message">
Message to be written.</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine(System.String,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine(System.String,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
      <param name="arg2">
</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
      <param name="arg1">
</param>
      <param name="arg2">
</param>
      <param name="arg3">
</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.WriteLine(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="args">
</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.Write(System.String)">
      <summary>
Writes a new line on the output/</summary>
      <param name="message">
Message to be written.</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.Write(System.String,System.Object)">
      <param name="message">
</param>
      <param name="arg0">
</param>
    </member>
    <member name="M:BullsAndCowsGame.InputOutput.ReadLine">
      <summary>
Reads a line from the input.</summary>
      <returns>
Returns the read line.</returns>
    </member>
    <member name="T:BullsAndCowsGame.LeaderBoard`1">
      <summary>
Represents a collection of items containing information about the best scoring players.</summary>
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.#ctor">
      <summary>
Initializes a new instance of the BullsAndCowsGame.LeaderBoard class.</summary>
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.#ctor(System.Int32)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.LeaderBoard class.</summary>
      <param name="maxCountOfStoredData">
</param>
    </member>
    <member name="P:BullsAndCowsGame.LeaderBoard`1.Count">
    </member>
    <member name="P:BullsAndCowsGame.LeaderBoard`1.MaxNumberOfItems">
      <summary>
Gets or sets the maximum number of items allowed in the leaderboard.</summary>
    </member>
    <member name="P:BullsAndCowsGame.LeaderBoard`1.Current">
      <summary>
Gets the element at the current position of the enumerator.</summary>
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.Add(`0)">
      <param name="item">
</param>
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.GetEnumerator">
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.Dispose">
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.MoveNext">
    </member>
    <member name="M:BullsAndCowsGame.LeaderBoard`1.Reset">
      <summary>
Resets the leaderboard.</summary>
    </member>
    <member name="T:BullsAndCowsGame.MessageDispatcher">
      <summary>
An instance of this object is used to return messages to the player.</summary>
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.#ctor">
      <summary>
Initializes a new instance of the BullsAndCows.MessageDispatcher class.</summary>
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetGoodbyeMessage">
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetInvalidCommandMessage">
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetNoCheatersMessage">
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetEnterNameMessage">
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetEnterCommandMessage">
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetWelcomeMessage">
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetWrongNumberMessage(System.Int32,System.Int32)">
      <summary>
Returns a message with information about how many bulls and how many cows did the guess number have.</summary>
      <returns>
A message holding information if how many bulls and cows were in the guess number.</returns>
      <param name="bullsCount">
How many bulls did the guess number have.</param>
      <param name="cowsCount">
How many cows did the guess number have.</param>
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetScoreBoard(BullsAndCowsGame.LeaderBoard{BullsAndCowsGame.Player})">
      <summary>
Returns a formatted string displaying information about the players in the given leaderboard.</summary>
      <returns>
The socreboard information formatted as a string.</returns>
      <param name="leaderBoard">
The leaderboard to be displayed.</param>
    </member>
    <member name="M:BullsAndCowsGame.MessageDispatcher.GetCongatulationsMessage(BullsAndCowsGame.Helper,System.Int32)">
      <summary>
This should be invoked when the player guesses the right number. It returns a congratulations message containing information about how many attempts were made.</summary>
      <returns>
The congratulations message.</returns>
      <param name="helper">
The helper used during the game.</param>
      <param name="attempts">
How many attempts did the player make to guess the number.</param>
    </member>
    <member name="T:BullsAndCowsGame.NormalCalculateBullsAndCowsStrategy">
      <summary>
A strategy class, providing method for calculating the number of bulls and cows</summary>
    </member>
    <member name="M:BullsAndCowsGame.NormalCalculateBullsAndCowsStrategy.ExecuteStrategy(System.String,System.String)">
      <summary>
Executes the current strategy.</summary>
      <returns>
An object containing information about how many bulls and how many cows did the current guess number have.</returns>
      <param name="playerInput">
The guess number entered by the player.</param>
      <param name="generatedNumber">
The original number that needs to be found out.</param>
    </member>
    <member name="T:BullsAndCowsGame.Player">
      <summary>
Holds information about the player name and number of guess attempts made in a game.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Player.#ctor(System.String,System.Int32)">
      <summary>
Initializes a new instance of the BullsAndCowsGame.Player class.</summary>
      <param name="name">
The player name.</param>
      <param name="attempts">
The number of guess attempts, the player made.</param>
    </member>
    <member name="P:BullsAndCowsGame.Player.Name">
      <summary>
Gets or sets the player name.</summary>
    </member>
    <member name="P:BullsAndCowsGame.Player.Attempts">
      <summary>
Gets or sets the number of guess attempts, the player made.</summary>
    </member>
    <member name="M:BullsAndCowsGame.Player.CompareTo(BullsAndCowsGame.Player)">
      <summary>
Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
      <returns>
A value that indicates the relative order of the objects being compared. The return value has these meanings: Less than zero if this instance precedes other in the sort order. Zero if this instance instance occurs in the same position in the sort order as other. Greater than zero if this instance follows other in the sort order.</returns>
      <param name="other">
The object to compare with the current instance.</param>
    </member>
  </members>
</doc>
